import sys   
sys.setrecursionlimit(100000000)

e = 3
d = 50216329790338569016242531830844490190367804132433285644072849575954742202918152465753727206404714074569214828863808616671301963468075834798483983014285855590003908843437204948483731585740200680061864879418399244438070440910830687030810766647459573837666078684118798500155288792273479818802030601335317766642476079731635750222904398041059457372521478206903739340583587720441155714084564913239373740562046336014640057006483754848099803828780445217007308441443207168015169238690803618123907477533320947382855533903657686096853116395506539288149658554690067519391117307570789853891477027560596215643310229019329694544499
n = 75324494685507853524363797746266735285551706198649928466109274363932113304377228698630590809607071111853822243295712925006952945202113752197725974521428783385005863265155807422725597378610301020092797319127598866657105661366246030546216149971189360756499118026178197750232933188410219728203045902002976649964263806866246549037834066745552147116630260963463471263166596953042992184640875758753189906689242549293363985323063224131785121604104844555143431215750318282064957249410895831018463753248428239055825751690583577982535250395896089224495914370141287059865397705181602992674963671225931578243680596931109559890373
c2 = 2609287288675327295769057226547728299657710377645432045980608622795144189511676862222976535673643918616734557455189351594492667013540132954964835047695955048470268656704338406153241323324547341162933725526831730955384744634996694666071775083738701164422855677028559468741513548490114982770756446006868048942259360689722991710704007818216653675559024300533469578302681027084059360477524504208338471076371181712312349013818721032800690591470670751855112070946543061105295982522619860148241914606962450737458555693218246051663500251318343996269480314221467325990484948800690349392078124613696689984745889080277632298256
r = 903950971518430225449373339509377042080650536197229575668812578330867540315738933448099411065707138226470486582200329618553958565550290505620855816188016566854067470287038385443572708419547066453558188308509374133963280529427637332103541066982505983588907843921035554409982615802114944635076208219354413170884459978656238341441774504643733760912138945711288960314578119600734927289209394943821075131208096995042510264904660737069669325648879152536119751317528678387583900744601493909839856149853537866863468840247985475190507727917960716427743451970074325313536667861456074313891212465015213572594281244252070672017

mr = pow(c2, d, n)


def extensiveEuclid(a, b):
    if b == 0:
        return a, 1, 0

    temp = extensiveEuclid(b, a % b)

    return temp[0], temp[2], temp[1] - (a // b) * temp[2]


def initialSolution(d, x, b, n):
    return x * (b / d) % n


def solutions(a, b, n):
    tempList = extensiveEuclid(a, n)

    d = tempList[0]
    x = tempList[1]

    if b % d != 0:
        print("No solution")
        return None

    x0 = initialSolution(d, x, b, n)

    result = []

    for i in range(d):
        new_solution = (x0 + i * (n / d)) % n
        result.append(new_solution)

    return result

print(solutions(r, mr, n))

print hex(523090086828889678262514935810790175456119161691107232673149).replace('0x', '').replace('L', '').decode('hex')